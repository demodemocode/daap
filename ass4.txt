 import java.util.*;

public class ass4
{
     static int max_value = 999;

    public static void dijectraj(int graph[][],int source)
    {
        int x = graph.length;

        int dist[]= new int[x];
        boolean visited[] = new boolean[x];

     for(int i =0 ;i<x;i++)
     {
        visited[i]=false;
        dist[i]=max_value;

     }
     dist[source]=0;


     for( int count=0;count<x-1;count++)
     {
        int u = -1;

         for(int k =0;k<x;k++)
         {
            if (!visited[k] &&(u==-1||dist[k]<dist[u]))
            {
                u=k;
            }
         }

         visited[u]= true;
         
         for(int v =0;v<x;v++)
         {
            if (!visited[v] && graph[u][v] != 0 && dist[u] != max_value && dist[u] + graph[u][v] < dist[v]) 
            {
                dist[v]=dist[u]+graph[u][v];
            }
         }
     }

     for(int i =0;i<x;i++)
     {
        System.out.println(dist[i]);
     }

    }

    public static void main(String[] args)
    {  
       
        System.out.println("enter the number of nodes");
        Scanner sc = new Scanner(System.in);

        int n = sc.nextInt();
        int graph[][]= new int[n][n];

         System.out.println("enter the input matrix");


        for(int d =0 ;d<n;d++)
        for(int r=0;r<n;r++)
           graph[d][r]=sc.nextInt();
        
            
          
       

       System.out.println("enter the source node");
       int source = sc.nextInt();

       dijectraj(graph,source);
    }
}